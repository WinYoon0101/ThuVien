/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package thuvienGUIAdmin;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import static thuvienGUI.InitPublic.getID;

/**
 *
 * @author RAVEN
 */
public class Form_5 extends javax.swing.JPanel {
    DefaultTableModel model;
    
    
    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    
    
    public void updateDB () {
        try {
            conn = DriverManager.getConnection("jdbc:oracle:thin:@192.168.56.1:1521:orcldb", "C##UITthuvien", "uitthuvien");
            String sql = "SELECT * FROM NGUOIDUNG ";
            ps = conn.prepareStatement(sql);
            
            rs = ps.executeQuery();
            model.setRowCount(0);

        // Iterate over the result set and add each row to the table model
        while (rs.next()) {
            if (rs.getString("VAITRO").equals("Nhan vien")) {
        Object[] rowData = {
            rs.getString("MAND"),
            rs.getString("TENND"),
            rs.getString("SDT"),
            rs.getString("USERNAME"),
            rs.getString("GIOITINH"),
            rs.getString("MAIL"),
            rs.getString("DIACHI"),
            rs.getString("PASS"),
        };
        model.addRow(rowData); // Thêm dòng vào bảng
    }
        }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }  // TODO add your handling code here
    }
    
    
    public void resetRender() {
        MaNV.setText("");
        HoTen.setText("");
        Email.setText("");
        DiaChi.setText("");
        user.setText("");
        pass.setText("");
        SDT.setText("");
        
        
        

    }
    
    private boolean checkExistingUser(Connection conn, String username, String email) throws SQLException {
    String query = "SELECT * FROM NGUOIDUNG WHERE USERNAME = ? OR MAIL = ?";
    try (PreparedStatement ps = conn.prepareStatement(query)) {
        ps.setString(1, username);
        ps.setString(2, email);
        try (ResultSet rs = ps.executeQuery()) {
            return rs.next(); // If any row is returned, user already exists
        }
    }
    }
    
    
    public Form_5() {
        initComponents();
        
        model = new DefaultTableModel();
        String tieude[]  = new String[]{ "Mã NV", "Họ Tên","SDT","Username","Giới Tính", "Email",
         "Địa Chỉ",  "Pass"};
        model.setColumnIdentifiers(tieude);
        StaffTable.setModel(model);
        setVisible(true);
        
        try {
            updateDB();
        } catch (Exception ex) {
            Logger.getLogger(Form_4.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Manage = new javax.swing.JPanel();
        ManageLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        StaffTable = new rojeru_san.complementos.RSTableMetro();
        Info = new javax.swing.JPanel();
        MaNV_Text = new javax.swing.JLabel();
        MaNV = new app.bolivia.swing.JCTextField();
        HoTen_Text = new javax.swing.JLabel();
        HoTen = new app.bolivia.swing.JCTextField();
        SDT_Text = new javax.swing.JLabel();
        SDT = new app.bolivia.swing.JCTextField();
        GioiTinh_Text = new javax.swing.JLabel();
        GioiTinh = new rojerusan.RSComboMetro();
        Email_Text = new javax.swing.JLabel();
        DiaChi = new app.bolivia.swing.JCTextField();
        DiaChi_Text = new javax.swing.JLabel();
        Email = new app.bolivia.swing.JCTextField();
        Xoa = new rojerusan.RSMaterialButtonRectangle();
        Them = new rojerusan.RSMaterialButtonRectangle();
        CapNhat = new rojerusan.RSMaterialButtonRectangle();
        InfoLabel1 = new javax.swing.JLabel();
        Pass = new javax.swing.JLabel();
        user = new app.bolivia.swing.JCTextField();
        User = new javax.swing.JLabel();
        pass = new app.bolivia.swing.JCTextField();

        setPreferredSize(new java.awt.Dimension(915, 600));

        Manage.setBackground(new java.awt.Color(255, 255, 255));
        Manage.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ManageLabel.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 24)); // NOI18N
        ManageLabel.setForeground(new java.awt.Color(53, 58, 85));
        ManageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ManageLabel.setText("QUẢN LÝ NHÂN VIÊN");
        Manage.add(ManageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 270, 40));

        StaffTable.setForeground(new java.awt.Color(53, 58, 85));
        StaffTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Họ Tên", "SDT", "UserName", "Giới tính", "Email", "Địa chỉ", "Pass"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        StaffTable.setColorBackgoundHead(new java.awt.Color(53, 58, 85));
        StaffTable.setColorFilasForeground1(new java.awt.Color(53, 58, 85));
        StaffTable.setColorFilasForeground2(new java.awt.Color(53, 58, 85));
        StaffTable.setColorSelBackgound(new java.awt.Color(255, 153, 102));
        StaffTable.setColorSelForeground(new java.awt.Color(53, 58, 85));
        StaffTable.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 12)); // NOI18N
        StaffTable.setFuenteFilas(new java.awt.Font("Nunito Sans 7pt ExtraBold", 0, 12)); // NOI18N
        StaffTable.setFuenteFilasSelect(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        StaffTable.setFuenteHead(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        StaffTable.setRowHeight(30);
        StaffTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StaffTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StaffTable);

        Manage.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 640, 450));

        Info.setBackground(new java.awt.Color(53, 58, 85));
        Info.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MaNV_Text.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        MaNV_Text.setForeground(new java.awt.Color(255, 255, 255));
        MaNV_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MaNV_Text.setText("MÃ NV");
        Info.add(MaNV_Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 60, 30));

        MaNV.setBackground(new java.awt.Color(53, 58, 85));
        MaNV.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        MaNV.setForeground(new java.awt.Color(255, 255, 255));
        MaNV.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MaNV.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        MaNV.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        MaNV.setSelectionColor(new java.awt.Color(197, 158, 217));
        MaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaNVActionPerformed(evt);
            }
        });
        Info.add(MaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 60, -1));

        HoTen_Text.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        HoTen_Text.setForeground(new java.awt.Color(255, 255, 255));
        HoTen_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HoTen_Text.setText("HỌ TÊN");
        Info.add(HoTen_Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 80, 30));

        HoTen.setBackground(new java.awt.Color(53, 58, 85));
        HoTen.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        HoTen.setForeground(new java.awt.Color(255, 255, 255));
        HoTen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        HoTen.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        HoTen.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        HoTen.setSelectionColor(new java.awt.Color(193, 158, 217));
        HoTen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HoTenActionPerformed(evt);
            }
        });
        Info.add(HoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 160, -1));

        SDT_Text.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        SDT_Text.setForeground(new java.awt.Color(255, 255, 255));
        SDT_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SDT_Text.setText("SỐ ĐIỆN THOẠI");
        Info.add(SDT_Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 100, 30));

        SDT.setBackground(new java.awt.Color(53, 58, 85));
        SDT.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        SDT.setForeground(new java.awt.Color(255, 255, 255));
        SDT.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        SDT.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        SDT.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        SDT.setSelectionColor(new java.awt.Color(197, 158, 217));
        Info.add(SDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 130, -1));

        GioiTinh_Text.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        GioiTinh_Text.setForeground(new java.awt.Color(255, 255, 255));
        GioiTinh_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GioiTinh_Text.setText("GIỚI TÍNH");
        Info.add(GioiTinh_Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 90, 30));

        GioiTinh.setBackground(new java.awt.Color(53, 58, 85));
        GioiTinh.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nam", "Nữ" }));
        GioiTinh.setColorArrow(new java.awt.Color(53, 58, 85));
        GioiTinh.setColorBorde(new java.awt.Color(255, 255, 255));
        GioiTinh.setColorFondo(new java.awt.Color(53, 58, 85));
        GioiTinh.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        GioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GioiTinhActionPerformed(evt);
            }
        });
        Info.add(GioiTinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, 90, 30));

        Email_Text.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        Email_Text.setForeground(new java.awt.Color(255, 255, 255));
        Email_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Email_Text.setText("ĐỊA CHỈ EMAIL");
        Info.add(Email_Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 110, 30));

        DiaChi.setBackground(new java.awt.Color(53, 58, 85));
        DiaChi.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        DiaChi.setForeground(new java.awt.Color(255, 255, 255));
        DiaChi.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DiaChi.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        DiaChi.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        DiaChi.setSelectionColor(new java.awt.Color(197, 158, 217));
        DiaChi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiaChiActionPerformed(evt);
            }
        });
        Info.add(DiaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 110, -1));

        DiaChi_Text.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        DiaChi_Text.setForeground(new java.awt.Color(255, 255, 255));
        DiaChi_Text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DiaChi_Text.setText("ĐỊA CHỈ");
        Info.add(DiaChi_Text, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 60, 30));

        Email.setBackground(new java.awt.Color(53, 58, 85));
        Email.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        Email.setForeground(new java.awt.Color(255, 255, 255));
        Email.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Email.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        Email.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        Email.setSelectionColor(new java.awt.Color(197, 158, 217));
        Info.add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 130, -1));

        Xoa.setBackground(new java.awt.Color(255, 255, 255));
        Xoa.setForeground(new java.awt.Color(53, 58, 85));
        Xoa.setText("XÓA");
        Xoa.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 14)); // NOI18N
        Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaActionPerformed(evt);
            }
        });
        Info.add(Xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 520, 80, 50));

        Them.setBackground(new java.awt.Color(255, 255, 255));
        Them.setForeground(new java.awt.Color(53, 58, 85));
        Them.setText("THÊM");
        Them.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 14)); // NOI18N
        Them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemActionPerformed(evt);
            }
        });
        Info.add(Them, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 80, 50));

        CapNhat.setBackground(new java.awt.Color(255, 255, 255));
        CapNhat.setForeground(new java.awt.Color(53, 58, 85));
        CapNhat.setText("CẬP NHẬT");
        CapNhat.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 14)); // NOI18N
        CapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CapNhatActionPerformed(evt);
            }
        });
        Info.add(CapNhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 520, 90, 50));

        InfoLabel1.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 18)); // NOI18N
        InfoLabel1.setForeground(new java.awt.Color(255, 255, 255));
        InfoLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        InfoLabel1.setText("THÔNG TIN NHÂN VIÊN");
        Info.add(InfoLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 230, 40));

        Pass.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        Pass.setForeground(new java.awt.Color(255, 255, 255));
        Pass.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Pass.setText("Pass");
        Info.add(Pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, 70, 30));

        user.setBackground(new java.awt.Color(53, 58, 85));
        user.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        user.setForeground(new java.awt.Color(255, 255, 255));
        user.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        user.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        user.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        user.setSelectionColor(new java.awt.Color(197, 158, 217));
        Info.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 250, -1));

        User.setFont(new java.awt.Font("Nunito Sans 7pt ExtraBold", 1, 12)); // NOI18N
        User.setForeground(new java.awt.Color(255, 255, 255));
        User.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        User.setText("UserName");
        Info.add(User, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 70, 30));

        pass.setBackground(new java.awt.Color(53, 58, 85));
        pass.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 255)));
        pass.setForeground(new java.awt.Color(255, 255, 255));
        pass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pass.setFont(new java.awt.Font("Nunito Sans 7pt", 0, 14)); // NOI18N
        pass.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        pass.setSelectionColor(new java.awt.Color(197, 158, 217));
        Info.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 452, 260, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Manage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Info, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Manage, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
            .addComponent(Info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void StaffTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StaffTableMouseClicked
        int rowNo = StaffTable.getSelectedRow();
        TableModel model = StaffTable.getModel();
        MaNV.setText(model.getValueAt(rowNo, 0).toString());
        HoTen.setText(model.getValueAt(rowNo, 1).toString());
        SDT.setText(model.getValueAt(rowNo, 2).toString());
        user.setText(model.getValueAt(rowNo, 3).toString());
        GioiTinh.setSelectedItem(model.getValueAt(rowNo, 4));
        Email.setText(model.getValueAt(rowNo, 5).toString());
        DiaChi.setText(model.getValueAt(rowNo, 6).toString());
        pass.setText(model.getValueAt(rowNo, 7).toString());
    }//GEN-LAST:event_StaffTableMouseClicked

    private void GioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GioiTinhActionPerformed

    private void XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaActionPerformed
        int selectedRow = StaffTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một người dùng để xóa.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Get the user ID from the selected row
    String maND = (String) StaffTable.getValueAt(selectedRow, 0);

    // Display a confirmation dialog for deleting the user
    int option = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa người dùng này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
    if (option == JOptionPane.YES_OPTION) {
        try {
            // Delete the user from the database
            conn = DriverManager.getConnection("jdbc:oracle:thin:@192.168.56.1:1521:orcldb", "C##UITthuvien", "uitthuvien");
            String sql = "DELETE FROM NGUOIDUNG WHERE MAND = ?";
            ps = conn.prepareStatement(sql);
            ps.setString(1, maND);
            int deleted = ps.executeUpdate();

            if (deleted > 0) {
                // If deletion is successful, update the table
                JOptionPane.showMessageDialog(this, "Đã xóa người dùng thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                // Update the table after deletion
                updateDB();
            } else {
                JOptionPane.showMessageDialog(this, "Không thể xóa người dùng. Vui lòng thử lại sau.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Không thể xóa người dùng. Vui lòng thử lại sau.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace(); // Print the error to console for debugging
        } finally {
            // Close resources
            try {
                if (ps != null) ps.close();
                if (conn != null) conn.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }
    resetRender();
    }//GEN-LAST:event_XoaActionPerformed

    private void ThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemActionPerformed
        if (HoTen.getText().isEmpty() || Email.getText().isEmpty() || DiaChi.getText().isEmpty() || user.getText().isEmpty() || pass.getText().isEmpty() ||SDT.getText().isEmpty() ) {
    JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin.", "Lỗi", JOptionPane.ERROR_MESSAGE);
    return; // Stop further execution if any required field is empty
}
    String tenND = HoTen.getText(); // Full Name
    String email = Email.getText(); // Email    
    String diaChi = DiaChi.getText(); // Address
    String username = user.getText(); // Username
    String password = pass.getText(); // Password
    String sdt = SDT.getText();    
    String gt =(String) GioiTinh.getSelectedItem();
    
    try {
        // Connect to the database
        conn = DriverManager.getConnection("jdbc:oracle:thin:@192.168.56.1:1521:orcldb", "C##UITthuvien", "uitthuvien");

        // Check if username or email already exists
        if (checkExistingUser(conn, username, email)) {
            JOptionPane.showMessageDialog(this, "Username hoặc email đã tồn tại trong hệ thống. Vui lòng chọn một username hoặc email khác.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        
            String maxMaNDQuery = "SELECT MAX(MaND) AS MaxND FROM NguoiDung";
    ps = conn.prepareStatement(maxMaNDQuery);
    rs = ps.executeQuery();
    
    String id = "";
    if (rs.next()) {
        String maxnd = rs.getString("MaxND");
        id = getID(maxnd);
    }
        

        // Prepare SQL statement for inserting a new user
        String sql = "INSERT INTO NGUOIDUNG (TENND, MAIL, SDT, GIOITINH, DIACHI, USERNAME, PASS, VAITRO,MAND) VALUES (?, ?, ?, ?, ?, ?, ?, ?,?)";
        ps = conn.prepareStatement(sql);
        ps.setString(1, tenND);
        ps.setString(2, email);
        ps.setString(3, sdt);
        ps.setString(4, gt);
        ps.setString(5, diaChi);
        ps.setString(6, username);
        ps.setString(7, password);
        ps.setString(8, "Nhan vien");
        ps.setString(9, "ND" + id);
        // Execute the SQL statement to insert the new user
        int inserted = ps.executeUpdate();

        if (inserted > 0) {
            // If insertion is successful, show success message
            JOptionPane.showMessageDialog(this, "Thêm người dùng mới thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            
            // Clear input fields after insertion
            resetRender();
            
            // Update the table after insertion
            updateDB();
        } else {
            // If insertion fails, show error message
            JOptionPane.showMessageDialog(this, "Không thể thêm người dùng mới. Vui lòng thử lại sau.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        // If an SQL exception occurs, show error message and print stack trace for debugging
        JOptionPane.showMessageDialog(this, "Không thể thêm người dùng mới. Vui lòng thử lại sau.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace();
    } finally {
        // Close resources
        try {
            if (ps != null) ps.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            // If closing resources fails, show error message
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    
    }//GEN-LAST:event_ThemActionPerformed

    private void CapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CapNhatActionPerformed
         int selectedRow = StaffTable.getSelectedRow();
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn một người dùng để cập nhật.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    // Get the user ID from the selected row
    String maND = (String) StaffTable.getValueAt(selectedRow, 0);

    // Assuming you have JTextField components for users to input updated information
    String tenND = HoTen.getText(); // Full Name
    String email = Email.getText(); // Email
    String sdt = SDT.getText();
    String gt =(String) GioiTinh.getSelectedItem();
    
    String diaChi = DiaChi.getText(); // Address
    String username = user.getText(); // Username
    String password = pass.getText(); // Password

    try {
        // Update the user information in the database
        conn = DriverManager.getConnection("jdbc:oracle:thin:@192.168.56.1:1521:orcldb", "C##UITthuvien", "uitthuvien");
        String sql = "UPDATE NGUOIDUNG SET TENND = ?, MAIL = ?, SDT = ?, GIOITINH = ?, DIACHI = ?, USERNAME = ?, PASS = ? WHERE MAND = ?";
        ps = conn.prepareStatement(sql);
        ps.setString(1, tenND);
        ps.setString(2, email);
        ps.setString(3, sdt);
        ps.setString(4, gt);
        ps.setString(5, diaChi);
        ps.setString(6, username);
        ps.setString(7, password);
        ps.setString(8, maND);

        int updated = ps.executeUpdate();

        if (updated > 0) {
            // If update is successful, update the table
            JOptionPane.showMessageDialog(this, "Thông tin người dùng đã được cập nhật thành công.", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            // Update the table after update
            updateDB();
        } else {
            JOptionPane.showMessageDialog(this, "Không thể cập nhật thông tin người dùng. Vui lòng thử lại sau.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Không thể cập nhật thông tin người dùng. Vui lòng thử lại sau.", "Lỗi", JOptionPane.ERROR_MESSAGE);
        ex.printStackTrace(); // Print the error to console for debugging
    } finally {
        // Close resources
        try {
            if (ps != null) ps.close();
            if (conn != null) conn.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    resetRender();
    }//GEN-LAST:event_CapNhatActionPerformed

    private void MaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaNVActionPerformed

    private void HoTenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HoTenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HoTenActionPerformed

    private void DiaChiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiaChiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiaChiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle CapNhat;
    private app.bolivia.swing.JCTextField DiaChi;
    private javax.swing.JLabel DiaChi_Text;
    private app.bolivia.swing.JCTextField Email;
    private javax.swing.JLabel Email_Text;
    private rojerusan.RSComboMetro GioiTinh;
    private javax.swing.JLabel GioiTinh_Text;
    private app.bolivia.swing.JCTextField HoTen;
    private javax.swing.JLabel HoTen_Text;
    private javax.swing.JPanel Info;
    private javax.swing.JLabel InfoLabel1;
    private app.bolivia.swing.JCTextField MaNV;
    private javax.swing.JLabel MaNV_Text;
    private javax.swing.JPanel Manage;
    private javax.swing.JLabel ManageLabel;
    private javax.swing.JLabel Pass;
    private app.bolivia.swing.JCTextField SDT;
    private javax.swing.JLabel SDT_Text;
    private rojeru_san.complementos.RSTableMetro StaffTable;
    private rojerusan.RSMaterialButtonRectangle Them;
    private javax.swing.JLabel User;
    private rojerusan.RSMaterialButtonRectangle Xoa;
    private javax.swing.JScrollPane jScrollPane1;
    private app.bolivia.swing.JCTextField pass;
    private app.bolivia.swing.JCTextField user;
    // End of variables declaration//GEN-END:variables
}
